import mongoose from 'mongoose'

const userSchema = new mongoose.Schema({
    email: {type: String, required: true, unique: true},
    name: {type: String, required: true},
    username: {type: String, default: null}, // username –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∏ –Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π
    password: {type: String, required: true, minlength: 6},
    profilePic: {type: String, default: ""},
    bio: {type: String},
    lastSeen: {type: Date, default: Date.now},
    scrollPositions: {type: Map, of: Number, default: new Map()}, // userId -> scrollPosition
    fcmToken: {type: String, default: null}, // Firebase Cloud Messaging —Ç–æ–∫–µ–Ω –¥–ª—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    
    // üì± Phone Auth –ø–æ–ª—è
    phoneNumber: {type: String, default: null, unique: true, sparse: true}, // –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –µ—Å–ª–∏ –µ—Å—Ç—å)
    firebaseUid: {type: String, default: null, unique: true, sparse: true}, // Firebase UID (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –µ—Å–ª–∏ –µ—Å—Ç—å)
    isVerified: {type: Boolean, default: false}, // –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    
    // E2EE Prekey Bundle (Signal Protocol)
    identityKey: {type: String, default: null}, // X25519 –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–ª—è ECDH
    identitySigningKey: {type: String, default: null}, // Ed25519 –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–µ–π
    signedPreKey: {
        keyId: {type: Number, default: 0},
        publicKey: {type: String, default: null},
        signature: {type: String, default: null},
        timestamp: {type: Date, default: Date.now}
    },
    oneTimePreKeys: [{
        keyId: {type: Number, required: true},
        publicKey: {type: String, required: true}
    }],
    
    // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (deprecated)
    publicKey: {type: String, default: null}
}, {timestamps: true});

const User = mongoose.model("User", userSchema)

export default User